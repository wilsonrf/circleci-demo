# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: wilsonrf/aws-cli:1.0.2

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: mkdir workspace
      - run: gradle test
      - run: gradle build
      - persist_to_workspace:
          root: workspace
          path: build/libs/app.jar
  deploy:
    docker:
      # specify the version you desire here
      - image: wilsonrf/aws-cli:1.0.2
    working_directory: ~/repo
    steps:
      - attach_workspace:
        at: workspace
      - run:
          name: Setup AWS credentials
          command: |
            export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - deploy:
          name: Deploy to Elastic Beanstalk
          command: |
            ts=`date +%s`
            aws s3 cp workspace/build/libs/app.jar "s3://$S3_BUCKET/$S3_KEY/$EB_APP_NAME-$ts.jar"
            aws elasticbeanstalk create-application-version \
              --application-name $EB_APP_NAME \
              --version-label "$ts" \
              --description "$EB_APP_NAME-$ts" \
              --source-bundle S3Bucket="$S3_BUCKET",S3Key="$S3_KEY/$EB_APP_NAME-$ts.jar"
            aws elasticbeanstalk update-environment \
              --application-name $EB_APP_NAME \
              --environment-name $EB_APP_ENV \
              --version-label "$ts"
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: 
                - master       